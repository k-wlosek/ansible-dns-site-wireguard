---
# Setup via https://github.com/unkn0w/noobs/blob/main/scripts/chce_wireguard.sh, adapted for Ansible
- name: Switch between encrypted and unencrypted DNS depending on the user choice
  ansible.builtin.set_fact:
    wg_dns: >-
      {%- if enable_adguard_unbound_doh -%}
        {%- set wg_dns = "127.0.0.1" -%}
      {%- else -%}
        {%- if "cloudflare" in dns_nameservers -%}
          {%- set wg_dns = "1.1.1.1,1.0.0.1" -%}
        {%- elif "quad9" in dns_nameservers -%}
          {%- set wg_dns = "9.9.9.9,149.112.112.112" -%}
        {%- else -%}
          {%- set wg_dns = "8.8.8.8,8.8.4.4" -%}
        {%- endif -%}
      {%- endif -%}
      {{- wg_dns -}}

- name: Load the iptable_nat module (CentOS)
  when: 'ansible_os_family == "RedHat"'
  community.general.modprobe:
    name: iptable_nat
    persistent: present


- name: Backup resolver file
  ansible.builtin.copy:
    src: "/etc/resolv.conf"
    dest: "/etc/resolv.back"
    owner: root
    group: root
    mode: 0644

- name: Update APT cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install required packages
  ansible.builtin.apt:
    pkg:
      - libmnl-dev
      - make
      - wireguard-tools
      - resolvconf
      - git
    state: present

- name: Stop and disable resolvconf
  ansible.builtin.service:
    name: resolvconf
    state: stopped
    enabled: no

- name: Restore the original resolver file
  ansible.builtin.copy:
    src: "/etc/resolv.back"
    dest: "/etc/resolv.conf"
    owner: root
    group: root
    mode: 0644

- name: Ensure TUN/TAP is present
  ansible.builtin.stat:
    path: /dev/net/tun

- name: Get wireguard-go source
  ansible.builtin.get_url:
    url: "https://git.zx2c4.com/wireguard-go/snapshot/wireguard-go-{{ wireguard_go_version }}.tar.xz"
    dest: "/tmp/wireguard-go-{{ wireguard_go_version }}.tar.xz"
    owner: root
    group: root
    mode: "0644"
  register: get_wireguard_go_source
  changed_when: get_wireguard_go_source.changed

- name: Create /tmp/wireguard-go directory
  ansible.builtin.file:
    path: "/tmp/wireguard-go"
    state: directory
    owner: root
    group: root
    mode: "0755"
  when: not get_wireguard_go_source.changed

- name: Extract wireguard-go source
  ansible.builtin.unarchive:
    src: "/tmp/wireguard-go-{{ wireguard_go_version }}.tar.xz"
    dest: "/tmp/wireguard-go"
    owner: root
    group: root
    mode: "0644"
    remote_src: yes
    extra_opts: "--strip-components=1"
  register: extract_wireguard_go_source
  changed_when: extract_wireguard_go_source.changed

- name: Get wireguard-tools
  ansible.builtin.git:
    repo: "https://git.zx2c4.com/wireguard-tools"
    dest: "/tmp/wireguard-tools"
  register: get_wireguard_tools
  changed_when: get_wireguard_tools.changed

- name: Get golang
  ansible.builtin.get_url:
    url: "https://dl.google.com/go/go{{ golang_version }}.linux-amd64.tar.gz"
    dest: "/tmp/go{{ golang_version }}.linux-amd64.tar.gz"
  register: get_golang
  changed_when: get_golang.changed

- name: Extract golang
  ansible.builtin.unarchive:
    src: "/tmp/go{{ golang_version }}.linux-amd64.tar.gz"
    dest: "/usr/local"
    remote_src: yes
  changed_when: false

- name: Add GOROOT to PATH
  ansible.builtin.lineinfile:
    path: /etc/profile
    line: "export GOROOT=/usr/local/go"
    state: present
    create: yes
  changed_when: false

- name: Add golang to PATH
  ansible.builtin.lineinfile:
    path: /etc/profile
    line: "export PATH=$PATH:$GOPATH/bin:$GOROOT/bin"
    state: present
    create: yes
  changed_when: false

- name: Source /etc/profile
  ansible.builtin.shell: |
    . /etc/profile
  changed_when: false

- name: Add symlink for golang
  ansible.builtin.file:
    src: "/usr/local/go/bin/go"
    dest: "/usr/bin/go"
    state: link
  changed_when: false

- name: Build wireguard-tools
  ansible.builtin.shell: |
    cd /tmp/wireguard-tools/src
    make
    make install
  changed_when: false

- name: Build wireguard-go
  ansible.builtin.shell: |
    cd /tmp/wireguard-go && make
  changed_when: false
  become: true

- name: Copy wireguard-go to /usr/bin
  ansible.builtin.copy:
    src: "/tmp/wireguard-go/wireguard-go"
    dest: "/usr/bin/wireguard-go"
    owner: root
    group: root
    mode: "0755"
    remote_src: true
  changed_when: false

- name: Generate server keys
  ansible.builtin.stat:
    path: /etc/wireguard/server_private_key
  register: server_private_key_stat
  changed_when: server_private_key_stat.stat.exists == false

- name: Generate server keys
  ansible.builtin.shell: "wg genkey | tee /etc/wireguard/server_private_key | wg pubkey > /etc/wireguard/server_public_key"
  when: server_private_key_stat.stat.exists == false

- name: Ensure server_private_key file exists
  ansible.builtin.file:
    path: /etc/wireguard/server_private_key
    state: touch
    mode: '0600'

- name: Ensure server_public_key file exists
  ansible.builtin.file:
    path: /etc/wireguard/server_public_key
    state: touch
    mode: '0644'

- name: Load server private key
  ansible.builtin.slurp:
    src: /etc/wireguard/server_private_key
  register: server_private_key

- name: Load server public key
  ansible.builtin.slurp:
    src: /etc/wireguard/server_public_key
  register: server_public_key

- name: Generate client keys
  ansible.builtin.stat:
    path: "/etc/wireguard/client_private_key{{ item }}"
  register: client_private_key_stat
  changed_when: client_private_key_stat.stat.exists == false
  loop: "{{ range(1, wg_clients + 1) | list }}"

- name: Generate client keys
  ansible.builtin.shell: |
    wg genkey | tee /etc/wireguard/client_private_key{{ item }} | wg pubkey > /etc/wireguard/client_public_key{{ item }}
  when: client_private_key_stat.results[item-1].changed or client_private_key_stat.results[item-1].stat.exists == false
  loop: "{{ range(1, wg_clients + 1) | list }}"

- name: Chmod keys
  ansible.builtin.find:
    paths: /etc/wireguard/
    patterns: '*private_key*'
  register: private_key_files

- name: Set file permissions for private keys
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: '0600'
  loop: "{{ private_key_files.files }}"
  become: true

- name: Load client private keys
  ansible.builtin.set_fact:
    client_private_keys: "{{ client_private_keys | default([]) + [lookup('pipe', 'sudo cat /etc/wireguard/client_private_key' ~ item)] }}"
  loop: "{{ range(1, wg_clients + 1) | list }}"
  
- name: Load client public keys
  ansible.builtin.set_fact:
    client_public_keys: "{{ client_public_keys | default([]) + [lookup('pipe', 'sudo cat /etc/wireguard/client_public_key' ~ item)] }}"
  loop: "{{ range(1, wg_clients + 1) | list }}"

- name: Generate client configurations
  ansible.builtin.stat:
    path: "/etc/wireguard/client{{ item }}.conf"
  register: client_config_stat
  loop: "{{ range(1, wg_clients + 1) | list }}"
  changed_when: false

- name: Create client configurations
  ansible.builtin.template:
    src: client.conf.j2
    dest: "/etc/wireguard/client{{ item }}.conf"
  loop: "{{ range(1, wg_clients + 1) | list }}"
  when: client_config_stat.results[item-1].stat.exists == false

- name: Check if wg0.conf exists
  ansible.builtin.stat:
    path: /etc/wireguard/wg0.conf
  register: wg0_conf_stat
  changed_when: false

- name: Create wg0.conf
  ansible.builtin.template:
    src: server.conf.j2
    dest: /etc/wireguard/wg0.conf
    owner: root
    group: root
    mode: "0644"
  when: wg0_conf_stat.stat.exists == false

- name: Stop Wireguard service
  ansible.builtin.service:
    name: wg-quick@wg0
    state: stopped

- name: Add environment variable to service
  ansible.builtin.shell: |
    sed -i '/RETRIES=infinity/{n;s/.*/Environment=WG_I_PREFER_BUGGY_USERSPACE_TO_POLISHED_KMOD=1/}' /lib/systemd/system/wg-quick@.service

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Add environment variables
  ansible.builtin.lineinfile:
    path: "{{ item }}"
    line: "WG_I_PREFER_BUGGY_USERSPACE_TO_POLISHED_KMOD=1"
    state: present
    create: yes
  with_items:
    - ~/.profile
    - ~/.bashrc

- name: Start Wireguard service
  ansible.builtin.service:
    name: wg-quick@wg0
    state: started

- name: Clean-up
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /tmp/wireguard-tools
    - /tmp/wireguard-go
