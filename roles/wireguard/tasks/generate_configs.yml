---
- name: Ensure server_private_key file exists
  ansible.builtin.file:
    path: /etc/wireguard/server_private_key
    state: touch
    mode: '0600'
  changed_when: false

- name: Ensure server_public_key file exists
  ansible.builtin.file:
    path: /etc/wireguard/server_public_key
    state: touch
    mode: '0644'
  changed_when: false

- name: Load server private key
  ansible.builtin.slurp:
    src: /etc/wireguard/server_private_key
  register: server_private_key

- name: Load server public key
  ansible.builtin.slurp:
    src: /etc/wireguard/server_public_key
  register: server_public_key

- name: Generate client keys
  ansible.builtin.stat:
    path: "/etc/wireguard/client_private_key{{ item }}"
  register: client_private_key_stat
  changed_when: client_private_key_stat.stat.exists == false
  loop: "{{ range(1, wg_clients + 1) | list }}"

- name: Generate client keys
  ansible.builtin.shell: |
    wg genkey | tee /etc/wireguard/client_private_key{{ item }} | wg pubkey > /etc/wireguard/client_public_key{{ item }}
  when: client_private_key_stat.results[item-1].changed or client_private_key_stat.results[item-1].stat.exists == false
  loop: "{{ range(1, wg_clients + 1) | list }}"

- name: Chmod keys
  ansible.builtin.find:
    paths: /etc/wireguard/
    patterns: '*private_key*'
  register: private_key_files

- name: Set file permissions for private keys
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: '0600'
  loop: "{{ private_key_files.files }}"
  become: true

- name: Load client private keys
  ansible.builtin.set_fact:
    client_private_keys: "{{ client_private_keys | default([]) + [lookup('pipe', 'sudo cat /etc/wireguard/client_private_key' ~ item)] }}"
  loop: "{{ range(1, wg_clients + 1) | list }}"
  
- name: Load client public keys
  ansible.builtin.set_fact:
    client_public_keys: "{{ client_public_keys | default([]) + [lookup('pipe', 'sudo cat /etc/wireguard/client_public_key' ~ item)] }}"
  loop: "{{ range(1, wg_clients + 1) | list }}"

- name: Generate client configurations
  ansible.builtin.stat:
    path: "/etc/wireguard/client{{ item }}.conf"
  register: client_config_stat
  loop: "{{ range(1, wg_clients + 1) | list }}"
  changed_when: false

- name: Create client configurations
  ansible.builtin.template:
    src: client.conf.j2
    dest: "/etc/wireguard/client{{ item }}.conf"
  loop: "{{ range(1, wg_clients + 1) | list }}"
  when: client_config_stat.results[item-1].stat.exists == false

- name: Check if wg0.conf exists
  ansible.builtin.stat:
    path: /etc/wireguard/wg0.conf
  register: wg0_conf_stat
  changed_when: false

- name: Create wg0.conf
  ansible.builtin.template:
    src: server.conf.j2
    dest: /etc/wireguard/wg0.conf
    owner: root
    group: root
    mode: "0644"
  when: wg0_conf_stat.stat.exists == false