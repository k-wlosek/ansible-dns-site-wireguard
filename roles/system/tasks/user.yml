---
- name: Check if the Ansible playbook is copied to the new user directory
  ansible.builtin.stat:
    path: "/home/{{ username }}/ansible-easy-vpn"
  register: playbook_copied

- name: Add the direnv hook to {{ username }}`s bashrc
  ansible.builtin.blockinfile:
    path: /home/{{ username }}/.bashrc
    block: |
      eval "$(direnv hook bash)"
      direnv allow $HOME/ansible-easy-vpn

- name: Handle user directory and playbook folder
  when: not playbook_copied.stat.exists
  block:
    - name: Copy the Ansible playbook to the new user
      ansible.posix.synchronize:
        src: "/{{ lookup('env', 'HOME') }}/ansible-easy-vpn"
        dest: "/home/{{ username }}"

    - name: Fix the user's venv copy
      tags:
        - skip_ansible_lint # risky-pipe-shell confuses sed separators for pipes
      changed_when: true
      ansible.builtin.shell:
        cmd: >-
          cd /home/{{ username }}/ansible-easy-vpn/.venv/bin &&
          sed -i "s|/root/ansible-easy-vpn|/home/{{ username }}/ansible-easy-vpn|g" *

    - name: Chmod the ansible-easy-vpn directory
      ansible.builtin.file:
        path: "/home/{{ username }}/ansible-easy-vpn"
        state: directory
        mode: 0755
        owner: "{{ username }}"
        group: "{{ username }}"
        recurse: yes
      when: not enable_username_creation | default(False)

    - name: Chmod the user home directory
      ansible.builtin.file:
        path: "/home/{{ username }}"
        state: directory
        mode: 0755
        owner: "{{ username }}"
        group: "{{ username }}"
        recurse: yes
      when: enable_username_creation | default(False)
